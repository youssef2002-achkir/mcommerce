{"ast":null,"code":"function fetchProducts() {\n  // Replace with the actual URL of your backend API\n  const apiUrl = 'http://localhost:3001/products/all';\n  return fetch(apiUrl).then(response => {\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    return response.json();\n  }).catch(error => {\n    console.error('Error fetching products:', error);\n  });\n}\n\n// Usage\nfetchProducts().then(data => {\n  // Handle the fetched data\n  console.log(data);\n}).catch(error => {\n  // Handle errors\n  console.error(error);\n});","map":{"version":3,"names":["fetchProducts","apiUrl","fetch","then","response","ok","Error","json","catch","error","console","data","log"],"sources":["C:/MICROSERVICES/Mcommerce-SpringBoot/McommerceNodeJs/ecomerce-client/src/api/product_service.js"],"sourcesContent":["function fetchProducts() {\r\n  // Replace with the actual URL of your backend API\r\n  const apiUrl = 'http://localhost:3001/products/all';\r\n\r\n  return fetch(apiUrl)\r\n    .then((response) => {\r\n      if (!response.ok) {\r\n        throw new Error('Network response was not ok');\r\n      }\r\n      return response.json();\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error fetching products:', error);\r\n    });\r\n}\r\n\r\n// Usage\r\nfetchProducts()\r\n  .then((data) => {\r\n    // Handle the fetched data\r\n    console.log(data);\r\n  })\r\n  .catch((error) => {\r\n    // Handle errors\r\n    console.error(error);\r\n  });\r\n"],"mappings":"AAAA,SAASA,aAAaA,CAAA,EAAG;EACvB;EACA,MAAMC,MAAM,GAAG,oCAAoC;EAEnD,OAAOC,KAAK,CAACD,MAAM,CAAC,CACjBE,IAAI,CAAEC,QAAQ,IAAK;IAClB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;IAChD;IACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;EACxB,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;IAChBC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;EAClD,CAAC,CAAC;AACN;;AAEA;AACAT,aAAa,CAAC,CAAC,CACZG,IAAI,CAAEQ,IAAI,IAAK;EACd;EACAD,OAAO,CAACE,GAAG,CAACD,IAAI,CAAC;AACnB,CAAC,CAAC,CACDH,KAAK,CAAEC,KAAK,IAAK;EAChB;EACAC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;AACtB,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}